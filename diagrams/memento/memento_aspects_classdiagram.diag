@startuml memento_aspects_classdiagram
skinparam DefaultFontName Arial

'left to right direction
top to bottom direction
'skinparam linetype ortho
skinparam linetype polyline
set separator ::
interface IOriginator {
    +IMemento CreateMemento()
    +void RestoreMemento(IMemento memento)
}
interface IMemento
enum StrictnessMode {
    Loose, Strict
}
enum MemberMode {
    All, FieldsOnly, PropertiesOnly
}

class MementoIgnoreAttribute <<Attribute>>
class MementoAttribute <<TypeAspect>> {
    + StrictnessMode StrictnessMode {get; set;}
    + MemberMode MemberMode {get; set;}
    + override void BuildAspect(IAspectBuilder<INamedType> builder)
    + override void BuildEligibility(IEligibilityBuilder<INamedType> builder)
}
class MementoRestoreHookAttribute <<MethodAspect>> {
    + override void BuildAspect(IAspectBuilder<IMethod> builder)
    + override void BuildEligibility(IEligibilityBuilder<IMethod> builder)
}
class MementoCreateHookAttribute <<MethodAspect>> {
    + override void BuildAspect(IAspectBuilder<IMethod> builder)
    + override void BuildEligibility(IEligibilityBuilder<IMethod> builder)
}

IMemento <.. IOriginator
IOriginator <.. MementoAttribute : implements on target
IMemento <.. MementoAttribute
MementoIgnoreAttribute <.. MementoAttribute
StrictnessMode -- MementoAttribute
MemberMode -- MementoAttribute
MementoAttribute <.. MementoRestoreHookAttribute
MementoAttribute <.. MementoCreateHookAttribute
IMemento <.d. MementoRestoreHookAttribute
IMemento <.d. MementoCreateHookAttribute

'abstract class Metalama::TypeAspect {
'    + virtual void BuildAspect(IAspectBuilder<INamedType> builder)
'    + virtual void BuildEligibility(IEligibilityBuilder<INamedType> builder)
'}
'abstract class Metalama::MethodAspect {
'    + virtual void BuildAspect(IAspectBuilder<IMethod> builder)
'    + virtual void BuildEligibility(IEligibilityBuilder<IMethod> builder)
'}
'
'TypeAspect <|-- MementoAttribute
'MethodAspect <|--MementoCreateHookAttribute
'MethodAspect <|--MementoRestoreHookAttribute

@enduml